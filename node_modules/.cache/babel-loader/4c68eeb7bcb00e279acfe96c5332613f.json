{"ast":null,"code":"import _classCallCheck from \"/home/binayakdev/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/binayakdev/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/binayakdev/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/binayakdev/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/binayakdev/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/binayakdev/Desktop/robofriends/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport { robots } from './robots.js';\nimport SearchBox from './SearchBox';\nimport './Card.css';\n/* if the component is not deconstructed like above we can use React.component */\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    /* We can pass on our own parameters in the constructor if we want*/\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    /*Since we are extending a class we should use super to call the object of the extended class */\n\n    _this.onSearchChange = function (event) {\n      /* this is a setter method */\n      _this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    _this.state = {\n      /* @this.state belongs to the Component class */\n      robots: [],\n      searchfield: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n        return response.json();\n      }).then(function (users) {\n        return _this2.setState({\n          robots: users\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var filteredRobots = this.state.robots.filter(function (robots) {\n        return robots.name.toLowerCase().includes(_this3.state.searchfield.toLowerCase());\n      });\n\n      if (this.state.robots > 5) {\n        return React.createElement(\"image\", {\n          alt: \"loading\",\n          src: \"favicon.ico\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"main\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"RoboFriends\"), React.createElement(SearchBox, {\n          searchChange: this.onSearchChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), React.createElement(CardList, {\n          robots: filteredRobots,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/binayakdev/Desktop/robofriends/src/App.js"],"names":["React","Component","CardList","robots","SearchBox","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","filter","name","toLowerCase","includes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,YAAP;AAEA;;IACMC,G;;;;;AACF,iBAAc;AAAA;;AAAA;;AAAU;AACpB;AAAgC;;AADtB,UAcdC,cAdc,GAcG,UAACC,KAAD,EAAW;AACxB;AACA,YAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AAEH,KAlBa;;AAEV,UAAKC,KAAL,GAAa;AAA2B;AACpCT,MAAAA,MAAM,EAAE,EADC;AAETM,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAFU;AAMb;;;;wCAEmB;AAAA;;AAChBI,MAAAA,KAAK,CAAE,4CAAF,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAG,KAAK;AAAA,eAAI,MAAI,CAACT,QAAL,CAAc;AAACL,UAAAA,MAAM,EAAEc;AAAT,SAAd,CAAJ;AAAA,OAFf;AAGH;;;6BAQQ;AAAA;;AACL,UAAMC,cAAc,GAAG,KAAKN,KAAL,CAAWT,MAAX,CAAkBgB,MAAlB,CAAyB,UAAAhB,MAAM,EAAI;AACtD,eAAOA,MAAM,CAACiB,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,MAAI,CAACV,KAAL,CAAWH,WAAX,CAAuBY,WAAvB,EAAnC,CAAP;AACH,OAFsB,CAAvB;;AAGA,UAAI,KAAKT,KAAL,CAAWT,MAAX,GAAoB,CAAxB,EAA0B;AACtB,eAAO;AAAO,UAAA,GAAG,EAAC,SAAX;AAAqB,UAAA,GAAG,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEM;AACF,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAE,KAAKG,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EASI,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAEY,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CADJ;AAaH;AACJ;;;;EA1CajB,S;;AA6ClB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CardList from './CardList';\nimport { robots } from './robots.js';\nimport SearchBox from './SearchBox';\nimport './Card.css';\n\n/* if the component is not deconstructed like above we can use React.component */\nclass App extends Component {\n    constructor() {         /* We can pass on our own parameters in the constructor if we want*/\n        super()                         /*Since we are extending a class we should use super to call the object of the extended class */\n        this.state = {                          /* @this.state belongs to the Component class */\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch ('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users}));\n    }\n\n    onSearchChange = (event) => {\n        /* this is a setter method */\n        this.setState({ searchfield: event.target.value })\n        \n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        if (this.state.robots > 5){\n            return <image alt='loading' src='favicon.ico'/>\n        }else {\n            return (\n                <div className='main'>\n                    <h1 className='title'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    {/** properties passed to a react element @<CardList /> is not chageable\n                        // we need state which is a changable prop\n                        this.state @above looks if the state of the search field has changed or not\n                        **/}\n\n                    { /* we are passing the robots props we is already defined */}    \n                    <CardList robots={filteredRobots}/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}