{"ast":null,"code":"import _classCallCheck from \"/home/binayakdev/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/binayakdev/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/binayakdev/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/binayakdev/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/binayakdev/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/binayakdev/Desktop/robofriends/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './Card.css';\nimport react from './react.png';\n/* if the component is not deconstructed like above we can use React.component */\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    /* We can pass on our own parameters in the constructor if we want*/\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    /*Since we are extending a class we should use super to call the object of the extended class */\n\n    _this.onSearchChange = function (event) {\n      /* this is a setter method */\n      _this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    _this.state = {\n      /* @this.state belongs to the Component class */\n      robots: [],\n      searchfield: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n        return response.json();\n      }).then(function (users) {\n        return _this2.setState({\n          robots: users\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var filteredRobots = this.state.robots.filter(function (robots) {\n        return robots.name.toLowerCase().includes(_this3.state.searchfield.toLowerCase());\n      });\n      var loading = {\n        background: 'black',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        textAlign: 'center'\n      };\n\n      if (this.state.robots.length === 0) {\n        return React.createElement(\"div\", {\n          style: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"image\",\n          alt: \"loading..\",\n          src: react,\n          height: \"200px\",\n          width: \"200px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"main\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"RoboFriends\"), React.createElement(SearchBox, {\n          searchChange: this.onSearchChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), React.createElement(CardList, {\n          robots: filteredRobots,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/binayakdev/Desktop/robofriends/src/App.js"],"names":["React","Component","CardList","SearchBox","react","App","onSearchChange","event","setState","searchfield","target","value","state","robots","fetch","then","response","json","users","filteredRobots","filter","name","toLowerCase","includes","loading","background","position","left","right","top","bottom","textAlign","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA;;IACMC,G;;;;;AACF,iBAAc;AAAA;;AAAA;;AAAU;AACpB;AAAgC;;AADtB,UAcdC,cAdc,GAcG,UAACC,KAAD,EAAW;AACxB;AACA,YAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AAEH,KAlBa;;AAEV,UAAKC,KAAL,GAAa;AAA2B;AACpCC,MAAAA,MAAM,EAAE,EADC;AAETJ,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAFU;AAMb;;;;wCAEmB;AAAA;;AAChBK,MAAAA,KAAK,CAAE,4CAAF,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAG,KAAK;AAAA,eAAI,MAAI,CAACV,QAAL,CAAc;AAACK,UAAAA,MAAM,EAAEK;AAAT,SAAd,CAAJ;AAAA,OAFf;AAGH;;;6BAQQ;AAAA;;AACL,UAAMC,cAAc,GAAG,KAAKP,KAAL,CAAWC,MAAX,CAAkBO,MAAlB,CAAyB,UAAAP,MAAM,EAAI;AACtD,eAAOA,MAAM,CAACQ,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,MAAI,CAACX,KAAL,CAAWH,WAAX,CAAuBa,WAAvB,EAAnC,CAAP;AACH,OAFsB,CAAvB;AAIA,UAAME,OAAO,GAAG;AACZC,QAAAA,UAAU,EAAE,OADA;AAEZC,QAAAA,QAAQ,EAAE,UAFE;AAGZC,QAAAA,IAAI,EAAE,CAHM;AAIZC,QAAAA,KAAK,EAAE,CAJK;AAKZC,QAAAA,GAAG,EAAE,CALO;AAMZC,QAAAA,MAAM,EAAE,CANI;AAOZC,QAAAA,SAAS,EAAE;AAPC,OAAhB;;AAWA,UAAI,KAAKnB,KAAL,CAAWC,MAAX,CAAkBmB,MAAlB,KAA6B,CAAjC,EAAmC;AAC/B,eACI;AAAK,UAAA,KAAK,EAAER,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAuB,UAAA,GAAG,EAAC,WAA3B;AAAuC,UAAA,GAAG,EAAEpB,KAA5C;AAAmD,UAAA,MAAM,EAAC,OAA1D;AAAkE,UAAA,KAAK,EAAC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH,OAND,MAMM;AACF,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAE,KAAKE,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EASI,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAEa,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CADJ;AAaH;AACJ;;;;EA1DalB,S;;AA6DlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './Card.css';\nimport react from './react.png';\n\n\n/* if the component is not deconstructed like above we can use React.component */\nclass App extends Component {\n    constructor() {         /* We can pass on our own parameters in the constructor if we want*/\n        super()                         /*Since we are extending a class we should use super to call the object of the extended class */\n        this.state = {                          /* @this.state belongs to the Component class */\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch ('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users}));\n    }\n\n    onSearchChange = (event) => {\n        /* this is a setter method */\n        this.setState({ searchfield: event.target.value })\n        \n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n\n        const loading = {\n            background: 'black',\n            position: 'absolute',\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            textAlign: 'center',\n        }\n\n\n        if (this.state.robots.length === 0){\n            return (\n                <div style={loading}>\n                    <img className=\"image\" alt='loading..' src={react} height='200px' width='200px'/>\n                </div>\n            );\n        }else {\n            return (\n                <div className='main'>\n                    <h1 className='title'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    {/** properties passed to a react element @<CardList /> is not chageable\n                        // we need state which is a changable prop\n                        this.state @above looks if the state of the search field has changed or not\n                        **/}\n\n                    { /* we are passing the robots props we is already defined */}    \n                    <CardList robots={filteredRobots}/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}